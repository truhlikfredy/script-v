define analyse_csr_mcause
  printf "[mcause] "
  if ($mcause & 0x80000000)
    printf "Interrupt, "
  end

  if (($mcause & 0x7FFFFFFF) == 0)
    printf "0 Instruction address misaligned (mtval is the address)"
  end
  if (($mcause & 0x7FFFFFFF) == 1)
    printf "1 Instruction access fault (mtval is the address)"
  end
  if (($mcause & 0x7FFFFFFF) == 2)
    printf "2 Illegal instruction (mtval contains the offending instruction opcode)"
  end
  if (($mcause & 0x7FFFFFFF) == 3)
    printf "3 Breakpoint"
  end
  if (($mcause & 0x7FFFFFFF) == 4)
    printf "4 Load address misaligned (mtval is the address)"
  end
  if (($mcause & 0x7FFFFFFF) == 5)
    printf "5 Load address fault (mtval is the address)"
  end
  if (($mcause & 0x7FFFFFFF) == 6)
    printf "6 Store/AMO address fault (mtval is the address)"
  end
  if (($mcause & 0x7FFFFFFF) == 7)
    printf "7 Store/AMO access fault (mtval is the address)"
  end
  if (($mcause & 0x7FFFFFFF) == 8)
    printf "8 Environment call from U-mode"
  end
  if (($mcause & 0x7FFFFFFF) == 9)
    printf "9 Environment call from S-mode"
  end
  if (($mcause & 0x7FFFFFFF) == 0xA)
    printf "A Environment call from M-mode"
  end
  if (($mcause & 0x7FFFFFFF) == 0xB)
    printf "B Instruction page fault"
  end
  if (($mcause & 0x7FFFFFFF) == 0xC)
    printf "C Load page fault (mtval is the address)"
  end
  if (($mcause & 0x7FFFFFFF) == 0xD)
    printf "D Reserved"
  end
  if (($mcause & 0x7FFFFFFF) == 0xE)
    printf "E Store page fault (mtval is the address)\n"
  end
  printf "\n"
end
document analyse_csr_mcause
Print mcause register bits
end


define analyse_csr_mstatus
  printf "[mstatus]=%08X Global interupt enable and many other states: ", $mstatus
  if ($mstatus & 0x00000001)
    printf "UIE "
  end
  if ($mstatus & 0x00000002)
    printf "SIE "
  end
  if ($mstatus & 0x00000004)
    printf "WPRI "
  end
  if ($mstatus & 0x00000008)
    printf "MIE "
  end

  if ($mstatus & 0x00000010)
    printf "UPIE "
  end
  if ($mstatus & 0x00000020)
    printf "SPIE "
  end
  if ($mstatus & 0x00000040)
    printf "WPRI "
  end
  if ($mstatus & 0x00000080)
    printf "MPIE "
  end

  if ($mstatus & 0x00000100)
    printf "SPP "
  end
  if ($mstatus & 0x00000200)
    printf "WPRI "
  end
  if ($mstatus & 0x00000400)
    printf "MPP[0] "
  end
  if ($mstatus & 0x00000800)
    printf "MPP[1] "
  end

  if ($mstatus & 0x00001000)
    printf "FS[0] "
  end
  if ($mstatus & 0x00002000)
    printf "FS[1] "
  end
  if ($mstatus & 0x00004000)
    printf "XS[0] "
  end
  if ($mstatus & 0x00008000)
    printf "XS[1] "
  end
  
  if ($mstatus & 0x00010000)
    printf "MPRV "
  end
  if ($mstatus & 0x00020000)
    printf "SUM "
  end
  if ($mstatus & 0x00040000)
    printf "MXR "
  end
  if ($mstatus & 0x00080000)
    printf "TVM "
  end

  if ($mstatus & 0x00010000)
    printf "TW "
  end
  if ($mstatus & 0x00020000)
    printf "TSR "
  end
  if ($mstatus & 0x7F800000)
    printf " WPRSI=%08X ", ($mstatus & 0x7F800000) >> 22
  end
  if ($mstatus & 0x80000000)
    printf "SD "
  end
  printf "\n"
end
document analyse_csr_mstatus
Print mstatus register bits
end

